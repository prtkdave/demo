@Library('demo')_

pipeline {
    
 agent any //{
    // node {
    //  label 'docker'
    //    }
 // }
 
 tools{
    jdk 'jdk'
	maven 'maven'
 }
 environment {
		GIT_URL = 'https://github.com/prtkdave/springboot.git'
		NEXUS_URL = 'http://ec2-34-229-190-97.compute-1.amazonaws.com:8183'
		NEXUS_REGISTERY = 'ec2-34-229-190-97.compute-1.amazonaws.com:8123'
		IMAGE_TAG = "${env.BUILD_NUMBER}"
		source_folder= 'target'
		target_folder= 'app/target'
		DOCKER_PORT= "8083"
		HOST_PORT= "8080"
		DOCKER_NAME= "web"+"${env.BUILD_NUMBER}"
	}
  // using the Timestamper plugin we can add timestamps to the console log
	options {
		timestamps()
	}

	stages {
    	stage('Checkout GIT') {
			steps{
			 script {
				withCredentials([
				usernamePassword(credentialsId: '5b09e5e8-aca5-4bc3-ae64-da77adb44743', 
				passwordVariable: 'githubpass', 
				usernameVariable: 'githubuser')]) {
						git "$GIT_URL"
					}
					
				}
			}
		}
		
		stage('Build Stage') {
			steps{
			 script {
				sh "mvn clean package"
					}
					
				}
			}
			
		stage('Edit Dockerfile') {
			steps{
			 script {
				sh "sed -i '/COPY/d' Dockerfile-spring && sed -i '2i COPY $source_folder $target_folder' Dockerfile-spring"
				sh "sed -i '/WORKDIR/d' Dockerfile-spring && sed -i '3i WORKDIR $target_folder' Dockerfile-spring"
				sh "cat Dockerfile-spring"
					}
					
				}
			}
			
			stage('Docker build image and push to nexus') {
			steps{
			 script {
			     String[] file_name=new String[1];
			     file_name[0] = "Dockerfile-spring"
			    	dockerImagebuild.call(file_name,"$NEXUS_REGISTERY","$IMAGE_TAG")
					}
					
				}
			}
			
		stage('RUN DOCKER') {
			steps{
			 script {
			          
			          dockerRun.call("$DOCKER_PORT","$HOST_PORT","spring","$IMAGE_TAG","$DOCKER_NAME")
					}
					
				}
			}
		}
		
}

